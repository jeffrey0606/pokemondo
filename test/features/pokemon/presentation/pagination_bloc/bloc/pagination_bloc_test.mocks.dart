// Mocks generated by Mockito 5.2.0 from annotations
// in pokemondo/test/features/pokemon/presentation/pagination_bloc/bloc/pagination_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:dartz/dartz.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:pokemondo/core/error/failures.dart' as _i6;
import 'package:pokemondo/features/pokemon/domain/entities/pagination.dart'
    as _i7;
import 'package:pokemondo/features/pokemon/domain/repositories/pagination_repository.dart'
    as _i2;
import 'package:pokemondo/features/pokemon/domain/usecases/get_page.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakePaginationRepository_0 extends _i1.Fake
    implements _i2.PaginationRepository {}

class _FakeEither_1<L, R> extends _i1.Fake implements _i3.Either<L, R> {}

/// A class which mocks [GetPage].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetPage extends _i1.Mock implements _i4.GetPage {
  MockGetPage() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.PaginationRepository get repository => (super.noSuchMethod(
      Invocation.getter(#repository),
      returnValue: _FakePaginationRepository_0()) as _i2.PaginationRepository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, _i7.Pagination>> call(
          _i4.Params? params) =>
      (super.noSuchMethod(Invocation.method(#call, [params]),
          returnValue: Future<_i3.Either<_i6.Failure, _i7.Pagination>>.value(
              _FakeEither_1<_i6.Failure, _i7.Pagination>())) as _i5
          .Future<_i3.Either<_i6.Failure, _i7.Pagination>>);
}
